public Program() {}
public void Save() {}

//int tick = 0;
int count = 1;
string debug = "";

public void Main(string argument) {
   
string text1 = ""; 
string text2= "";
string text3 = "";


string[] arg = null;
var gts = GridTerminalSystem;
IMyRadioAntenna db = gts.GetBlockWithName("debugger") as IMyRadioAntenna;
IMyTimerBlock timer = gts.GetBlockWithName( "timer" ) as IMyTimerBlock;

string[] setting = argument.Split( '=' );   
 
if ( setting.Length > 1 && setting[0].Split(':')[0] == "font")          
 printFont ( Convert.ToDouble( setting[1] ), Convert.ToInt32( setting[0].Split(':')[1]) );

if( argument == "reset" )
{
send ("all", "reset", "");
count = 1;
}

if( argument == "start_f" ) 
{ 
send( "blue_frigate:" + count, "action.dock", "station");
count ++; 
}
   
if( argument == "undock_f" )  
{  
send( "blue_frigate:" + count, "action.undock", "");
count ++;
} 

if( argument == "start_t" )  
{  
send( "TestShip:" + count, "action.dock", "station"); 
count ++;  
} 
    
if( argument == "undock_t" )   
{   
send("TestShip:" + count, "action.undock", ""); 
count ++; 
} 

arg = argument.Split( ',' );
if ( arg.Length > 1  )
{
if ( arg[0] == "log" && arg[1].Split(':')[0] == "blue_frigate" )
 {
 text2 += arg[ 1 ] + " " + arg[ 0 ] + "\n";
 for( int i = 2; i < arg.Length; i++ )
  text2 += arg[ i ] + "\n";
 print( text2, 2 );
 }
 else if ( arg[0] == "log" && arg[1] == "station")
 { 
 text1 += arg[ 1 ] + " " + arg[ 0 ] + ": " + "\n"; 
 for( int i = 2; i < arg.Length; i++ ) 
  text1 +=  arg[ i ] + "\n"; 
 print( text1, 1 );
 }
else if ( arg[0] == "log" && arg[1].Split(':')[0] == "TestShip" ) 
 { 
 text3 += arg[ 1 ] + " " + arg[ 0 ] + "\n"; 
 for( int i = 2; i < arg.Length; i++ ) 
  text3 += arg[ i ] + "\n"; 
 print( text3, 3 );
}

}

if( count > 8 )
count = 1;

}

void printFont( double font, int n ) {  
  
IMyTextPanel lcd = GridTerminalSystem.GetBlockWithName("lcd" + n) as IMyTextPanel;   
lcd.SetValueFloat("FontSize", (float)font);  
  
}  
   
void print( String text, int n )  {   
      
IMyTextPanel lcd = GridTerminalSystem.GetBlockWithName("lcd"+n) as IMyTextPanel;   
      
lcd.WritePublicText( text );  
lcd.ShowPublicTextOnScreen();  
   
}

void send( string target, string type, string grid ) 
{ 
List<IMyRadioAntenna> an = new List<IMyRadioAntenna>();            
GridTerminalSystem.GetBlocksOfType<IMyRadioAntenna>( an );           
IMyRadioAntenna ant = an[0];     
ant.TransmitMessage( grid + "|" + type + "?" + target, MyTransmitTarget.Everyone ); 
}

void log ( string s ) 
{ 
 debug += s + ","; 
}
